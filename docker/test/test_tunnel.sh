#!/bin/bash
# Test script for CoentroVPN tunnel functionality
# This script is meant to be run inside the client container

set -e  # Exit on error

echo "=== CoentroVPN Tunnel Test ==="

# Test 1: Authentication
echo "=== Test 1: Authentication ==="
echo "Checking socket permissions..."
ls -la /var/run/coentrovpn
echo "Socket should have permissions 600 (rw-------)"

echo "Testing connection to helper daemon..."
echo "Sending ping request to helper daemon..."
./target/debug/coentro_client ping
if [ $? -eq 0 ]; then
    echo "✅ Successfully connected to helper daemon"
else
    echo "❌ Failed to connect to helper daemon"
    exit 1
fi

# Test 2: Authentication with wrong user
echo "=== Test 2: Authentication with wrong user ==="
echo "Creating a test user with different UID..."
useradd -m testuser

echo "Trying to connect as testuser (should fail)..."
sudo -u testuser ./target/debug/coentro_client ping
if [ $? -ne 0 ]; then
    echo "✅ Authentication correctly rejected unauthorized user"
else
    echo "❌ Authentication failed to reject unauthorized user"
    exit 1
fi

# Test 3: Normal operation
echo "=== Test 3: Normal operation ==="
echo "Testing connection to helper daemon as authorized user..."

# Test TUN interface creation with specific parameters
echo "Requesting TUN interface creation with specific parameters..."
./target/debug/coentro_client setup-tunnel --ip 10.8.0.1/24 --routes 0.0.0.0/0,192.168.0.0/16 --dns 8.8.8.8,1.1.1.1 --mtu 1400 &
TUNNEL_PID=$!

# Give the tunnel setup some time to complete
sleep 2

# Check if TUN interface exists
echo "Checking for TUN interface..."
if ip link show tun0 > /dev/null 2>&1; then
    echo "✅ TUN interface exists"
    ip addr show tun0
else
    echo "❌ TUN interface does not exist"
    exit 1
fi

# Check if the IP address is correctly assigned
echo "Checking IP address assignment..."
if ip addr show tun0 | grep -q "10.8.0.1/24"; then
    echo "✅ IP address correctly assigned"
else
    echo "❌ IP address not correctly assigned"
    ip addr show tun0
    exit 1
fi

# Check if the MTU is correctly set
echo "Checking MTU setting..."
if ip link show tun0 | grep -q "mtu 1400"; then
    echo "✅ MTU correctly set to 1400"
else
    echo "❌ MTU not correctly set"
    ip link show tun0
    exit 1
fi

# Check routing table
echo "Checking routing table..."
if ip route | grep -q "0.0.0.0/0 dev tun0"; then
    echo "✅ Default route correctly added"
else
    echo "❌ Default route not correctly added"
    ip route
    exit 1
fi

if ip route | grep -q "192.168.0.0/16 dev tun0"; then
    echo "✅ Specific route correctly added"
else
    echo "❌ Specific route not correctly added"
    ip route
    exit 1
fi

# Check DNS configuration
echo "Checking DNS configuration..."
if grep -q "nameserver 8.8.8.8" /etc/resolv.conf && grep -q "nameserver 1.1.1.1" /etc/resolv.conf; then
    echo "✅ DNS servers correctly configured"
else
    echo "❌ DNS servers not correctly configured"
    cat /etc/resolv.conf
    exit 1
fi

# Test connectivity through the tunnel
echo "Testing connectivity through the tunnel..."
# This is a placeholder - actual connectivity test will depend on your implementation
# For example, you might ping a specific IP that should be routed through the tunnel

# Kill the tunnel process
echo "Killing tunnel process..."
kill $TUNNEL_PID
sleep 1

# Test teardown command
echo "Testing tunnel teardown command..."
./target/debug/coentro_client teardown-tunnel
if [ $? -eq 0 ]; then
    echo "✅ Tunnel teardown command successful"
else
    echo "❌ Failed to execute tunnel teardown command"
    exit 1
fi

# Check if TUN interface is gone
echo "Checking if TUN interface is gone..."
if ! ip link show tun0 > /dev/null 2>&1; then
    echo "✅ TUN interface successfully removed"
else
    echo "❌ TUN interface still exists after teardown"
    ip link show tun0
    exit 1
fi

# Check if DNS configuration is restored
echo "Checking if DNS configuration is restored..."
if ! grep -q "Generated by CoentroVPN" /etc/resolv.conf; then
    echo "✅ DNS configuration successfully restored"
else
    echo "❌ DNS configuration not restored after teardown"
    cat /etc/resolv.conf
    exit 1
fi

echo "=== Test completed ==="
