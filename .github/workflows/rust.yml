name: Build, Lint, and Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: "-D warnings"

jobs:
  rust-checks:
    name: Rust Checks
    runs-on: macos-latest
    strategy:
      fail-fast: true
      matrix:
        rust:
          - 1.87.0
    steps:
      - uses: actions/checkout@v3

      - name: Cache cargo registry
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.87.0
          override: true
          components: rustfmt, clippy

      - name: Check formatting
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

      - name: Lint with clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all-targets --all-features -- -D warnings

      - name: Build Rust workspace
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --workspace

      - name: Run unit tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --workspace

      - name: Run E2E tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --test e2e -p shared_utils

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Cache npm
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Build and test frontend
        run: |
          cd dashboard
          npm install
          npm run build
          if [ -f package.json ] && grep -q '"test"' package.json; then
            npm run test
          fi
